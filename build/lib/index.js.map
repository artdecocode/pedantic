{"version":3,"sources":["../../src/lib/index.js"],"names":["excludeReducer","acc","current","ok","ex","i","length","indexOf","before","slice","after","newExcluded","hasFile","array","file","some","a","getKeys","files","hasIndex","hasFooter","excluded","f","reduce","sorted","sort"],"mappings":";;;;;;;AAAA;;;;;AAKO,MAAMA,iBAAiB,CAACC,GAAD,EAAMC,OAAN,KAAkB;AAC9C,QAAM,CAACC,EAAD,EAAKC,EAAL,IAAWH,GAAjB;AACA,MAAII,CAAJ;;AACA,MAAI,CAACD,GAAGE,MAAJ,IAAc,CAACD,IAAID,GAAGG,OAAH,CAAWL,OAAX,CAAL,KAA6B,CAAC,CAAhD,EAAmD;AACjD,WAAO,CACL,CAAC,GAAGC,EAAJ,EAAQD,OAAR,CADK,EAELE,EAFK,CAAP;AAID;;AACD,QAAMI,SAASJ,GAAGK,KAAH,CAAS,CAAT,EAAYJ,CAAZ,CAAf;AACA,QAAMK,QAAQN,GAAGK,KAAH,CAASJ,IAAI,CAAb,EAAgB,CAAC,CAAjB,CAAd;AACA,QAAMM,cAAc,CAAC,GAAGH,MAAJ,EAAY,GAAGE,KAAf,CAApB;AACA,SAAO,CACLP,EADK,EAELQ,WAFK,CAAP;AAID,CAhBM;;;;AAkBP,MAAMC,UAAU,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAC/B,SAAOD,MAAME,IAAN,CAAWC,KAAKA,KAAKF,IAArB,CAAP;AACD,CAFD;AAIA;;;;;AAGO,MAAMG,UAAWC,KAAD,IAAW;AAChC,QAAMC,WAAWP,QAAQM,KAAR,EAAe,UAAf,CAAjB;AACA,QAAME,YAAYR,QAAQM,KAAR,EAAe,WAAf,CAAlB;AAEA,QAAMG,WAAW,CAAC,UAAD,EAAa,WAAb,CAAjB;AAEA,QAAM,CAACC,CAAD,IAAMJ,MAAMK,MAAN,CAAavB,cAAb,EAA6B,CAAC,EAAD,EAAKqB,QAAL,CAA7B,CAAZ;AACA,QAAMG,SAASF,EAAEG,IAAF,EAAf;;AAEA,MAAIN,YAAYC,SAAhB,EAA2B;AACzB,WAAO,CACL,UADK,EAEL,GAAGI,MAFE,EAGL,WAHK,CAAP;AAKD;;AACD,MAAIL,QAAJ,EAAc;AACZ,WAAO,CACL,UADK,EAEL,GAAGK,MAFE,CAAP;AAID;;AACD,MAAIJ,SAAJ,EAAe;AACb,WAAO,CACL,GAAGI,MADE,EAEL,WAFK,CAAP;AAID;;AACD,SAAOA,MAAP;AACD,CA7BM","sourcesContent":["/**\n * Exclude items from the array\n * @param {[string[], string[]]} acc left to exclude, and non-excluded\n * @param {string} current\n */\nexport const excludeReducer = (acc, current) => {\n  const [ok, ex] = acc\n  let i\n  if (!ex.length || (i = ex.indexOf(current)) == -1) {\n    return [\n      [...ok, current],\n      ex,\n    ]\n  }\n  const before = ex.slice(0, i)\n  const after = ex.slice(i + 1, -1)\n  const newExcluded = [...before, ...after]\n  return [\n    ok,\n    newExcluded,\n  ]\n}\n\nconst hasFile = (array, file) => {\n  return array.some(a => a == file)\n}\n\n/**\n * @param {string[]} files\n */\nexport const getKeys = (files) => {\n  const hasIndex = hasFile(files, 'index.md')\n  const hasFooter = hasFile(files, 'footer.md')\n\n  const excluded = ['index.md', 'footer.md']\n\n  const [f] = files.reduce(excludeReducer, [[], excluded])\n  const sorted = f.sort()\n\n  if (hasIndex && hasFooter) {\n    return [\n      'index.md',\n      ...sorted,\n      'footer.md',\n    ]\n  }\n  if (hasIndex) {\n    return [\n      'index.md',\n      ...sorted,\n    ]\n  }\n  if (hasFooter) {\n    return [\n      ...sorted,\n      'footer.md',\n    ]\n  }\n  return sorted\n}\n"],"file":"index.js"}